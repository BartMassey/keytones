use std::{env, fs, io, path::Path};

use microcheby::ChebyshevExpansion as C;

fn write_consts<F: io::Write>(mut out: F) {
    let f = |n| 440.0 * f32::powf(2.0, (n + 116.0 - 69.0) / 12.0);
    let mut coeffs: [f32; 4] = C::fit(0.0, 11.0, f).coeffs();
    coeffs[0] *= 0.5;
    let cs = format!("pub const CHEBYSHEV_TOP_OCTAVE: [f32; 4] = {coeffs:?};");

    let lines = [
        "// AUTOGENERATED by build.rs from buildconsts.rs",
        "// Edits will be overwritten!",
        "",
        "/// Chebyshev series constants for top octave frequencies.",
        &cs,
    ];
    for line in lines {
        writeln!(out, "{}", line).unwrap();
    }
}

fn main() {
    let out_dir = env::var("OUT_DIR").unwrap();
    let dest_path = Path::new(&out_dir).join("consts.rs");
    let f = fs::File::create(dest_path).unwrap();
    write_consts(f);
    println!("cargo::rerun-if-changed=build.rs");
}
